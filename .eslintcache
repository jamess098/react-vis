{"/Users/amila/Documents/Projects/react-vis/index.js":{"size":1164,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/index.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/legends/continuous-color.js":{"size":1470,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/legends/continuous-color.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/legends/continuous-size.js":{"size":1445,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/legends/continuous-size.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/legends/horizontal-discrete-color.js":{"size":1485,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/legends/horizontal-discrete-color.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/legends/searchable-discrete-color.js":{"size":2368,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/legends/searchable-discrete-color.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/legends/vertical-discrete-color.js":{"size":1473,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/legends/vertical-discrete-color.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/plot/area-chart-elevated.js":{"size":2198,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/plot/area-chart-elevated.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/plot/area-chart.js":{"size":1730,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/plot/area-chart.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/plot/axis-with-turned-labels.js":{"size":1939,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/plot/axis-with-turned-labels.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/plot/bar-chart.js":{"size":1896,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/plot/bar-chart.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/plot/complex-chart.js":{"size":5690,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/plot/complex-chart.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/plot/custom-axes-orientation.js":{"size":2067,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/plot/custom-axes-orientation.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/plot/custom-axis.js":{"size":1760,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/plot/custom-axis.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/plot/custom-scales.js":{"size":1938,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/plot/custom-scales.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/plot/dynamic-complex-edge-hints.js":{"size":3529,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/plot/dynamic-complex-edge-hints.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/plot/dynamic-crosshair.js":{"size":2531,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/plot/dynamic-crosshair.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/plot/dynamic-hints.js":{"size":2199,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/plot/dynamic-hints.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/plot/dynamic-programmatic-rightedge-hints.js":{"size":2598,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/plot/dynamic-programmatic-rightedge-hints.js","messages":[],"errorCount":0,"warningCount":0,"output":"// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React from 'react';\n\nimport {\n  XYPlot,\n  XAxis,\n  YAxis,\n  VerticalGridLines,\n  HorizontalGridLines,\n  LineSeries,\n  MarkSeries,\n  Hint} from '../../';\n\nconst CHART_MARGINS = {left: 50, right: 10, top: 10, bottom: 25};\nconst DATA = [\n  {x: 1, y: 5},\n  {x: 2, y: 12},\n  {x: 3, y: 8},\n  {x: 4, y: 15}\n];\nconst XMAX = 4;\n\nfunction getAlignStyle(align, x, y) {\n  return {\n    right: 0,\n    top: CHART_MARGINS.top + y\n  };\n}\n\nexport default class Example extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: null\n    };\n    this._rememberValue = this._rememberValue.bind(this);\n  }\n\n  _rememberValue(value) {\n    this.setState({value});\n  }\n\n  render() {\n    const {value} = this.state;\n    return (\n      <XYPlot\n        width={300}\n        height={300}\n        margin={CHART_MARGINS}>\n        <VerticalGridLines />\n        <HorizontalGridLines />\n        <XAxis />\n        <YAxis />\n        <MarkSeries\n          onNearestX={ this._rememberValue}\n          data={DATA}/>\n        {value ?\n          <LineSeries\n            data={[{x: value.x, y: value.y}, {x: XMAX, y: value.y}]}\n            stroke=\"black\"\n          /> : null\n        }\n        {value ?\n          <Hint\n            value={value}\n            getAlignStyle={ getAlignStyle }\n          >\n            <div className=\"rv-hint__content\">\n              { `(${value.x}, ${value.y})` }\n            </div>\n          </Hint> : null\n        }\n      </XYPlot>\n    );\n  }\n}\n"}},"/Users/amila/Documents/Projects/react-vis/src/example/plot/dynamic-simple-edge-hints.js":{"size":2745,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/plot/dynamic-simple-edge-hints.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/plot/dynamic-simple-topedge-hints.js":{"size":2532,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/plot/dynamic-simple-topedge-hints.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/plot/grid.js":{"size":1614,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/plot/grid.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/plot/heatmap-chart.js":{"size":1956,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/plot/heatmap-chart.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/plot/line-chart.js":{"size":2336,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/plot/line-chart.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/plot/linemark-chart.js":{"size":1932,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/plot/linemark-chart.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/plot/scatterplot.js":{"size":1834,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/plot/scatterplot.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/plot/stacked-histogram.js":{"size":1953,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/plot/stacked-histogram.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/plot/static-crosshair.js":{"size":1861,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/plot/static-crosshair.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/plot/static-hints.js":{"size":2031,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/plot/static-hints.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/plot/synced-charts.js":{"size":3460,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/plot/synced-charts.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/plot/time-chart.js":{"size":2192,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/plot/time-chart.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/plot/width-height-margin.js":{"size":1611,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/plot/width-height-margin.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/radial-chart/custom-radius-radial-chart.js":{"size":1580,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/radial-chart/custom-radius-radial-chart.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/radial-chart/donut-chart.js":{"size":1471,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/radial-chart/donut-chart.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/radial-chart/simple-radial-chart.js":{"size":1655,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/radial-chart/simple-radial-chart.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/table/static-table.js":{"size":1772,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/table/static-table.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/example/treemap/simple-treemap.js":{"size":1496,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/example/treemap/simple-treemap.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/index.js":{"size":3238,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/index.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/animation.js":{"size":2926,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/animation.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/legends/continuous-color-legend.js":{"size":2853,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/legends/continuous-color-legend.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/legends/continuous-size-legend.js":{"size":2914,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/legends/continuous-size-legend.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/legends/discrete-color-legend-item.js":{"size":2195,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/legends/discrete-color-legend-item.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/legends/discrete-color-legend.js":{"size":2873,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/legends/discrete-color-legend.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/legends/searchable-discrete-color-legend.js":{"size":2681,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/legends/searchable-discrete-color-legend.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/make-vis-flexible.js":{"size":4429,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/make-vis-flexible.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/plot/axis/axis-line.js":{"size":2149,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/plot/axis/axis-line.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/plot/axis/axis-ticks.js":{"size":5757,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/plot/axis/axis-ticks.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/plot/axis/axis-title.js":{"size":2411,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/plot/axis/axis-title.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/plot/axis/axis.js":{"size":5384,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/plot/axis/axis.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/plot/axis/x-axis.js":{"size":1641,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/plot/axis/x-axis.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/plot/axis/y-axis.js":{"size":1640,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/plot/axis/y-axis.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/plot/crosshair.js":{"size":4989,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/plot/crosshair.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/plot/grid-lines.js":{"size":4343,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/plot/grid-lines.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/plot/hint.js":{"size":10744,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/plot/hint.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/plot/horizontal-grid-lines.js":{"size":1743,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/plot/horizontal-grid-lines.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/plot/series/abstract-series.js":{"size":7131,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/plot/series/abstract-series.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/plot/series/area-series.js":{"size":3131,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/plot/series/area-series.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/plot/series/bar-series.js":{"size":4162,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/plot/series/bar-series.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/plot/series/heatmap-series.js":{"size":3335,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/plot/series/heatmap-series.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/plot/series/horizontal-bar-series.js":{"size":1783,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/plot/series/horizontal-bar-series.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/plot/series/horizontal-rect-series.js":{"size":1790,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/plot/series/horizontal-rect-series.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/plot/series/line-mark-series.js":{"size":1676,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/plot/series/line-mark-series.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/plot/series/line-series.js":{"size":3512,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/plot/series/line-series.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/plot/series/mark-series.js":{"size":3171,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/plot/series/mark-series.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/plot/series/rect-series.js":{"size":3700,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/plot/series/rect-series.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/plot/series/vertical-bar-series.js":{"size":1775,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/plot/series/vertical-bar-series.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/plot/series/vertical-rect-series.js":{"size":1782,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/plot/series/vertical-rect-series.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/plot/vertical-grid-lines.js":{"size":1723,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/plot/vertical-grid-lines.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/plot/xy-plot.js":{"size":9194,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/plot/xy-plot.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/pure-render-component.js":{"size":1431,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/pure-render-component.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/radial-chart/radial-chart.js":{"size":8755,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/radial-chart/radial-chart.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/table/table.js":{"size":6135,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/table/table.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/theme.js":{"size":1531,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/theme.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/treemap/treemap.js":{"size":5420,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/treemap/treemap.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/utils/animation-utils.js":{"size":1366,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/utils/animation-utils.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/utils/axis-utils.js":{"size":2121,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/utils/axis-utils.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/utils/chart-utils.js":{"size":2277,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/utils/chart-utils.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/utils/data-utils.js":{"size":2135,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/utils/data-utils.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/utils/react-utils.js":{"size":1636,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/utils/react-utils.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/lib/utils/scales-utils.js":{"size":18295,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/utils/scales-utils.js","messages":[],"errorCount":0,"warningCount":0,"output":"// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport * as d3Scale from 'd3-scale';\nimport * as d3Array from 'd3-array';\nimport * as d3Collection from 'd3-collection';\n\nimport React from 'react';\nimport warning from 'warning';\n\nimport {\n  getUniquePropertyValues,\n  addValueToArray} from './data-utils';\n\n/**\n * Linear scale name.\n * @type {string}\n * @const\n */\nconst LINEAR_SCALE_TYPE = 'linear';\n\n/**\n * Ordinal scale name.\n * @type {string}\n * @const\n */\nconst ORDINAL_SCALE_TYPE = 'ordinal';\n\n/**\n * Category scale.\n * @type {string}\n * @const\n */\nconst CATEGORY_SCALE_TYPE = 'category';\n\n/**\n * Literal scale.\n * Differs slightly from d3's identity scale in that it does not coerce value\n * into numbers, it simply returns exactly what you give it\n * @type {string}\n * @const\n */\nconst LITERAL_SCALE_TYPE = 'literal';\n\n/**\n * Log scale name.\n * @type {string}\n * @const\n */\nconst LOG_SCALE_TYPE = 'log';\n\n/**\n * Time scale name.\n * @type {string}\n * @const\n */\nconst TIME_SCALE_TYPE = 'time';\n\n/**\n * Time UTC scale name.\n * @type {string}\n * @const\n */\nconst TIME_UTC_SCALE_TYPE = 'time-utc';\n\n/**\n * Scale functions that are supported in the library.\n * @type {Object}\n * @const\n */\nconst SCALE_FUNCTIONS = {\n  [LINEAR_SCALE_TYPE]: d3Scale.scaleLinear,\n  [ORDINAL_SCALE_TYPE]: d3Scale.scalePoint,\n  [CATEGORY_SCALE_TYPE]: d3Scale.scaleOrdinal,\n  [LITERAL_SCALE_TYPE]: literalScale,\n  [LOG_SCALE_TYPE]: d3Scale.scaleLog,\n  [TIME_SCALE_TYPE]: d3Scale.scaleTime,\n  [TIME_UTC_SCALE_TYPE]: d3Scale.scaleUtc\n};\n/**\n * Find the smallest distance between the values on a given scale and return\n * the index of the element, where the smallest distance was found.\n * It returns the first occurrence of i where\n * `scale(value[i]) - scale(value[i - 1])` is minimal\n * @param {Array} values Array of values.\n * @param {Object} scaleObject Scale object.\n * @returns {number} Index of an element where the smallest distance was found.\n * @private\n */\nexport function _getSmallestDistanceIndex(values, scaleObject) {\n  const scaleFn = _getScaleFnFromScaleObject(scaleObject);\n  let result = 0;\n  if (scaleFn) {\n    let nextValue;\n    let currentValue = scaleFn(values[0]);\n    let distance = Infinity;\n    let nextDistance;\n\n    for (let i = 1; i < values.length; i++) {\n      nextValue = scaleFn(values[i]);\n      nextDistance = Math.abs(nextValue - currentValue);\n      if (nextDistance < distance) {\n        distance = nextDistance;\n        result = i;\n      }\n      currentValue = nextValue;\n    }\n  }\n  return result;\n}\n\n/**\n * Crate a scale function from the scale object.\n * @param {Object} scaleObject Scale object.\n * @returns {*} Scale function.\n * @private\n */\nfunction _getScaleFnFromScaleObject(scaleObject) {\n  if (!scaleObject) {\n    return null;\n  }\n  const {type, domain, range} = scaleObject;\n  const scale = SCALE_FUNCTIONS[type]().domain(domain).range(range);\n  if (type === ORDINAL_SCALE_TYPE) {\n    scale.padding(0.5);\n  }\n  return scale;\n}\n\n/**\n * Get the domain from the array of data.\n * @param {Array} allData All data.\n * @param {string} attr Property name.\n * @param {string} type Scale type.\n * @returns {Array} Domain.\n * @private\n */\nexport function getDomainByAttr(allData, attr, type) {\n  let domain;\n  const attr0 = `${attr}0`;\n\n  // Collect both attr and available attr0 values from the array of data.\n  const values = allData.reduce((data, d) => {\n    const value = d[attr];\n    const value0 = d[attr0];\n    if (_isDefined(value)) {\n      data.push(value);\n    }\n    if (_isDefined(value0)) {\n      data.push(value0);\n    }\n    return data;\n  }, []);\n\n  if (!values.length) {\n    return [];\n  }\n\n  // Create proper domain depending on the type of the scale.\n  if (type !== ORDINAL_SCALE_TYPE && type !== CATEGORY_SCALE_TYPE) {\n    domain = d3Array.extent(values);\n  } else {\n    domain = d3Collection.set(values).values();\n  }\n  return domain;\n}\n\n/**\n * Create custom scale object from the value. When the scale is created from\n * this object, it should return the same value all time.\n * @param {string} attr Attribute.\n * @param {*} value Value.\n * @returns {Object} Custom scale object.\n * @private\n */\nfunction _createScaleObjectForValue(attr, value) {\n  if (typeof value === 'undefined') {\n    return null;\n  }\n  return {\n    type: 'category',\n    range: [value],\n    domain: [],\n    distance: 0,\n    attr,\n    baseValue: undefined,\n    isValue: true\n  };\n}\n\n/**\n * Create a regular scale object for a further use from the existing parameters.\n * @param {Array} domain Domain.\n * @param {Array} range Range.\n * @param {string} type Type.\n * @param {number} distance Distance.\n * @param {string} attr Attribute.\n * @param {number} baseValue Base value.\n * @returns {Object} Scale object.\n * @private\n */\nfunction _createScaleObjectForFunction(\n  domain, range, type, distance, attr, baseValue) {\n  return {\n    domain,\n    range,\n    type,\n    distance,\n    attr,\n    baseValue,\n    isValue: false\n  };\n}\n\n/**\n * Get scale object from props. E. g. object like {xRange, xDomain, xDistance,\n * xType} is transformed into {range, domain, distance, type}.\n * @param {Object} props Props.\n * @param {string} attr Attribute.\n * @returns {*} Null or an object with the scale.\n * @private\n */\nfunction _collectScaleObjectFromProps(props, attr) {\n  const {\n    [attr]: value,\n    [`_${attr}Value`]: fallbackValue,\n    [`${attr}Range`]: range,\n    [`${attr}Distance`]: distance = 0,\n    [`${attr}BaseValue`]: baseValue,\n    [`${attr}Type`]: type = LINEAR_SCALE_TYPE} = props;\n\n  let {[`${attr}Domain`]: domain} = props;\n\n  // Return value-based scale if the value is assigned.\n  if (typeof value !== 'undefined') {\n    return _createScaleObjectForValue(attr, value);\n  }\n\n  // Pick up the domain from the properties and create a new one if it's not\n  // available.\n  if (typeof baseValue !== 'undefined') {\n    domain = addValueToArray(domain, baseValue);\n  }\n\n  // Make sure that the minimum necessary properties exist.\n  if (!range || !domain || !domain.length) {\n    // Try to use the fallback value if it is available.\n    return _createScaleObjectForValue(attr, fallbackValue);\n  }\n\n  return _createScaleObjectForFunction(\n    domain,\n    range,\n    type,\n    distance,\n    attr,\n    baseValue\n  );\n}\n\n/**\n * Compute left domain adjustment for the given values.\n * @param {Array} values Array of values.\n * @returns {number} Domain adjustment.\n * @private\n */\nfunction _computeLeftDomainAdjustment(values) {\n  if (values.length > 1) {\n    return (values[1] - values[0]) / 2;\n  }\n  if (values.length === 1) {\n    return values[0] - 0.5;\n  }\n  return 0;\n}\n\n/**\n * Compute right domain adjustment for the given values.\n * @param {Array} values Array of values.\n * @returns {number} Domain adjustment.\n * @private\n */\nfunction _computeRightDomainAdjustment(values) {\n  if (values.length > 1) {\n    return (values[values.length - 1] - values[values.length - 2]) / 2;\n  }\n  if (values.length === 1) {\n    return values[0] - 0.5;\n  }\n  return 0;\n}\n\n/**\n * Compute distance for the given values.\n * @param {Array} values Array of values.\n * @param {Array} domain Domain.\n * @param {number} bestDistIndex Index of a best distance found.\n * @param {function} scaleFn Scale function.\n * @returns {number} Domain adjustment.\n * @private\n */\nfunction _computeScaleDistance(values, domain, bestDistIndex, scaleFn) {\n  if (values.length > 1) {\n    // Avoid zero indexes.\n    const i = Math.max(bestDistIndex, 1);\n    return Math.abs(scaleFn(values[i]) - scaleFn(values[i - 1]));\n  }\n  if (values.length === 1) {\n    return Math.abs(scaleFn(domain[1]) - scaleFn(domain[0]));\n  }\n  return 0;\n}\n\n/**\n * Get the distance, the smallest and the largest value of the domain.\n * @param {Array} data Array of data for the single series.\n * @param {Object} scaleObject Scale object.\n * @returns {{domain0: number, domainN: number, distance: number}} Resuylt.\n * @private\n */\nfunction _getScaleDistanceAndAdjustedDomain(data, scaleObject) {\n  const {attr, domain} = scaleObject;\n  const values = getUniquePropertyValues(data, attr);\n  const index = _getSmallestDistanceIndex(values, scaleObject);\n\n  const adjustedDomain = [].concat(domain);\n\n  adjustedDomain[0] -= _computeLeftDomainAdjustment(values);\n  adjustedDomain[domain.length - 1] += _computeRightDomainAdjustment(values);\n  // Fix log scale if it's too small.\n  if (scaleObject.type === LOG_SCALE_TYPE && domain[0] <= 0) {\n    adjustedDomain[0] = Math.min(domain[1] / 10, 1);\n  }\n\n  const adjustedScaleFn = _getScaleFnFromScaleObject({\n    ...scaleObject,\n    domain: adjustedDomain\n  });\n\n  const distance = _computeScaleDistance(\n    values, adjustedDomain, index, adjustedScaleFn);\n\n  return {\n    domain0: adjustedDomain[0],\n    domainN: adjustedDomain[adjustedDomain.length - 1],\n    distance\n  };\n}\n\n/**\n * Returns true if scale adjustments are possible for a given scale.\n * @param {Object} props Props.\n * @param {Object} scaleObject Scale object.\n * @returns {boolean} True if scale adjustments possible.\n * @private\n */\nfunction _isScaleAdjustmentPossible(props, scaleObject) {\n  const {attr} = scaleObject;\n  const {\n    _adjustBy: adjustBy = [],\n    _adjustWhat: adjustWhat = []} = props;\n\n  // The scale cannot be adjusted if there's no attributes to adjust, no\n  // suitable values\n  return adjustWhat.length &&\n    adjustBy.length &&\n    adjustBy.indexOf(attr) !== -1;\n}\n\n/**\n * Adjust continuous scales (e.g. 'linear', 'log' and 'time') by adding the\n * space from the left and right of them and by computing the best distance.\n * @param {Object} props Props.\n * @param {Object} scaleObject Scale object.\n * @returns {*} Scale object with adjustments.\n * @private\n */\nfunction _adjustContinuousScale(props, scaleObject) {\n  const {\n    _allData: allSeriesData,\n    _adjustWhat: adjustWhat = []} = props;\n\n  // Assign the initial values.\n  const domainLength = scaleObject.domain.length;\n  const {domain} = scaleObject;\n  let scaleDomain0 = domain[0];\n  let scaleDomainN = domain[domainLength - 1];\n  let scaleDistance = scaleObject.distance;\n\n  // Find the smallest left position of the domain, the largest right position\n  // of the domain and the best distance for them.\n  allSeriesData.forEach((data, index) => {\n    if (adjustWhat.indexOf(index) === -1) {\n      return;\n    }\n    if (data && data.length) {\n      const {\n        domain0,\n        domainN,\n        distance} = _getScaleDistanceAndAdjustedDomain(data, scaleObject);\n      scaleDomain0 = Math.min(scaleDomain0, domain0);\n      scaleDomainN = Math.max(scaleDomainN, domainN);\n      scaleDistance = Math.max(scaleDistance, distance);\n    }\n  });\n\n  scaleObject.domain = [\n    scaleDomain0,\n    ...domain.slice(1, -1),\n    scaleDomainN\n  ];\n\n  scaleObject.distance = scaleDistance;\n\n  return scaleObject;\n}\n\n/**\n * Get an adjusted scale. Suitable for 'category' and 'ordinal' scales.\n * @param {Object} scaleObject Scale object.\n * @returns {*} Scale object with adjustments.\n * @private\n */\nfunction _adjustCategoricalScale(scaleObject) {\n  const scaleFn = _getScaleFnFromScaleObject(scaleObject);\n  const {domain, range} = scaleObject;\n  if (domain.length > 1) {\n    scaleObject.distance = scaleFn(domain[1]) - scaleFn(domain[0]);\n  } else {\n    scaleObject.distance = range[1] - range[0];\n  }\n  return scaleObject;\n}\n\n/**\n * Retrieve a scale object or a value from the properties passed.\n * @param {Object} props Object of props.\n * @param {string} attr Attribute.\n * @returns {*} Scale object, value or null.\n */\nexport function getScaleObjectFromProps(props, attr) {\n  // Create the initial scale object.\n  const scaleObject = _collectScaleObjectFromProps(props, attr);\n\n  if (!scaleObject) {\n    return null;\n  }\n\n  // Make sure if it's possible to add space to the scale object. If not,\n  // return the object immediately.\n  if (!_isScaleAdjustmentPossible(props, scaleObject)) {\n    return scaleObject;\n  }\n\n  const {type} = scaleObject;\n  // Depending on what type the scale is, apply different adjustments. Distances\n  // for the ordinal and category scales are even, equal domains cannot be\n  // adjusted.\n  if (type === ORDINAL_SCALE_TYPE || type === CATEGORY_SCALE_TYPE) {\n    return _adjustCategoricalScale(scaleObject);\n  }\n  return _adjustContinuousScale(props, scaleObject);\n}\n\n/**\n * Get d3 scale for a given prop.\n * @param {Object} props Props.\n * @param {string} attr Attribute.\n * @returns {function} d3 scale function.\n */\nexport function getAttributeScale(props, attr) {\n  const scaleObject = getScaleObjectFromProps(props, attr);\n  return _getScaleFnFromScaleObject(scaleObject);\n}\n\n/**\n * Get the value of `attr` from the object.\n * @param {Object} d Object.\n * @param {string} attr Attribute.\n * @returns {*} Value of the point.\n * @private\n */\nfunction _getAttrValue(d, attr) {\n  return d.data ? d.data[attr] : d[attr];\n}\n\nfunction _isDefined(value) {\n  return typeof value !== 'undefined';\n}\n\n/**\n * Get prop functor (either a value or a function) for a given attribute.\n * @param {Object} props Series props.\n * @param {string} attr Property name.\n * @returns {*} Function or value.\n */\nexport function getAttributeFunctor(props, attr) {\n  const scaleObject = getScaleObjectFromProps(props, attr);\n  if (scaleObject) {\n    const scaleFn = _getScaleFnFromScaleObject(scaleObject);\n    return d => scaleFn(_getAttrValue(d, attr));\n  }\n  return null;\n}\n\n/**\n * Get the functor which extracts value form [attr]0 property. Use baseValue if\n * no attr0 property for a given object is defined. Fall back to domain[0] if no\n * base value is available.\n * @param {Object} props Object of props.\n * @param {string} attr Attribute name.\n * @returns {*} Function which returns value or null if no values available.\n */\nexport function getAttr0Functor(props, attr) {\n  const scaleObject = getScaleObjectFromProps(props, attr);\n  if (scaleObject) {\n    const attr0 = `${attr}0`;\n    const {domain} = scaleObject;\n    const {baseValue = domain[0]} = scaleObject;\n    const scaleFn = _getScaleFnFromScaleObject(scaleObject);\n    return d => {\n      const value = _getAttrValue(d, attr0);\n      return scaleFn(_isDefined(value) ? value : baseValue);\n    };\n  }\n  return null;\n}\n\n/**\n * Tries to get the string|number value of the attr and falls back to\n * a fallback property in case if the value is a scale.\n * @param {Object} props Series props.\n * @param {string} attr Property name.\n * @returns {*} Function or value.\n */\nexport function getAttributeValue(props, attr) {\n  const scaleObject = getScaleObjectFromProps(props, attr);\n  if (scaleObject) {\n    if (!scaleObject.isValue) {\n      warning(false, `Cannot use data defined ${attr} for this series` +\n        `type. Using fallback value instead.`);\n    }\n    return scaleObject.range[0];\n  }\n  return null;\n}\n\n/**\n * Get prop types by the attribute.\n * @param {string} attr Attribute.\n * @returns {Object} Object of xDomain, xRange, xType, xDistance and _xValue,\n * where x is an attribute passed to the function.\n */\nexport function getScalePropTypesByAttribute(attr) {\n  return {\n    [`_${attr}Value`]: React.PropTypes.any,\n    [`${attr}Domain`]: React.PropTypes.array,\n    [`${attr}Range`]: React.PropTypes.array,\n    [`${attr}Type`]: React.PropTypes.oneOf(\n      Object.keys(SCALE_FUNCTIONS)\n    ),\n    [`${attr}Distance`]: React.PropTypes.number,\n    [`${attr}BaseValue`]: React.PropTypes.any\n  };\n}\n\n/**\n * Extract the list of scale properties from the entire props object.\n * @param {Object} props Props.\n * @param {Array<String>} attributes Array of attributes for the given\n * components (for instance, `['x', 'y', 'color']`).\n * @returns {Object} Collected props.\n */\nexport function extractScalePropsFromProps(props, attributes) {\n  const result = {};\n  Object.keys(props).forEach(key => {\n    const attr = attributes.find(\n      a => key.indexOf(a) === 0 || key.indexOf(`_${a}`) === 0);\n    if (!attr) {\n      return;\n    }\n    result[key] = props[key];\n  });\n  return result;\n}\n\n/**\n * Extract the missing scale props from the given data and return them as\n * an object.\n * @param {Object} props Props.\n * @param {Array} data Array of all data.\n * @param {Array<String>} attributes Array of attributes for the given\n * components (for instance, `['x', 'y', 'color']`).\n * @returns {Object} Collected props.\n */\nexport function getMissingScaleProps(props, data, attributes) {\n  const result = {};\n  // Make sure that the domain is set and pass the domain as well.\n  attributes.forEach(attr => {\n    if (!props[`${attr}Domain`]) {\n      result[`${attr}Domain`] = getDomainByAttr(\n        data,\n        attr,\n        props[`${attr}Type`]\n      );\n    }\n  });\n  return result;\n}\n\n/**\n * Return a d3 scale that returns the literal value that was given to it\n * @returns {function} literal scale.\n */\nexport function literalScale() {\n  function scale(d) {\n    return d;\n  }\n\n  function response() {\n    return scale;\n  }\n\n  scale.domain = response;\n  scale.range = response;\n  scale.unknown = response;\n  scale.copy = response;\n\n  return scale;\n}\n\nexport default {\n  extractScalePropsFromProps,\n  getAttributeScale,\n  getAttributeFunctor,\n  getAttr0Functor,\n  getAttributeValue,\n  getDomainByAttr,\n  getMissingScaleProps,\n  getScaleObjectFromProps,\n  getScalePropTypesByAttribute,\n  literalScale\n};\n"}},"/Users/amila/Documents/Projects/react-vis/src/lib/utils/series-utils.js":{"size":5108,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/lib/utils/series-utils.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/test/axis-utils.js":{"size":1557,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/test/axis-utils.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/test/components.js":{"size":4071,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/test/components.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/test/data-utils.js":{"size":2351,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/test/data-utils.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/test/index.js":{"size":1261,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/test/index.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/test/scales-utils.js":{"size":7765,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/test/scales-utils.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/test/series-utils.js":{"size":2539,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/test/series-utils.js","messages":[],"errorCount":0,"warningCount":0}},"/Users/amila/Documents/Projects/react-vis/src/test/xy-plot.js":{"size":3155,"mtime":1484010101000,"hashOfConfig":"a6496ee3d26e9b8aee8c4cf61c4e042a","results":{"filePath":"/Users/amila/Documents/Projects/react-vis/src/test/xy-plot.js","messages":[],"errorCount":0,"warningCount":0}}}